1. Создать двух пользователей (с помощью метода User.objects.create_user('username’)):

    1. python3 manage.py shell
    2. from news.models import *
    3. u1 = User.objects.create_user(username='Nick', email='nick@mail.ru', password='00000')
    4. u2 = User.objects.create_user(username='Tom', email='tom@mail.ru', password='11111')

2. Создать два объекта модели Author, связанные с пользователями:

    1. a1=Author.objects.create(user=u1)
    2. a2=Author.objects.create(user=u2)

3. Добавить 4 категории в модель Category:

	1. c1=Category.objects.create(name='AI')
	2. c2=Category.objects.create(name='Sport')
	3. c3=Category.objects.create(name='Travel')
	4. c4=Category.objects.create(name='Music')

4. Добавить 2 статьи и 1 новость:

	1. p1=Post.objects.create(author=a1, title='AI in Music', post_type='A', post_text='Одной из ключевых областей, где нейросети привнесли значительные изменения, является генерация готовых музыкальных произведений')
	2. p2=Post.objects.create(author=a2, title='AI in Travel', post_type='A', post_text='Одним из наиболее многообещающих направлений для применения искусственного интеллекта в области туризма является персонализация путешествий')
	3. p3=Post.objects.create(author=a2, title='AI in Travel', post_type='N', post_text='Крупнейшие круизные компании Royal Caribbean и Carnival внедрили ИИ для прогнозирования спроса и совершенствования закупок')

5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий):

	1. p1.category.add(c1, c4)
	2. p2.category.add(c1, c3)
	3. p3.category.add(c1, c3)

6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий):

	1. c1=Comment.objects.create(post=p1, user=u2, text='ИИ упрощает выполнение некоторых этапов в заботе')
	2. c2=Comment.objects.create(post=p1, user=u1, text='Я музыкант и против использования ИИ. Применение ИИ нарушает авторские права')
	3. c3=Comment.objects.create(post=p2, user=u2, text='Наша тур-фирма уже применяет ИИ при персонализации данных')
	4. c4=Comment.objects.create(post=p3, user=u1, text='Royal Caribbean и Carnival отличные компании')

7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов:

	1. p1.dislike()
	2. p2.like()
	3. p3.like()
	4. p1.rating
	5. p2.rating
	6. p3.rating
	7. c1.like()
	8. c2.dislike()
	9. c3.like()
	10. c4.like()
	11. c1.rating
	12. c2.rating
	13. c3.rating
	14. c4.rating

8. Обновить рейтинги пользователей:

	1. a1.update_rating()
	2. a2.update_rating()
	3. a1.rating
	4. a2.rating

9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта):

	1. best_user = Author.objects.order_by('-rating').values('user__username', 'rating').first()
	2. best_user

10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье:

	1. best_post = Post.objects.order_by('-rating').values('date', 'author__user__username', 'rating', 'title').first()
	2. best_post
	3. best_post_for_preview = Post.objects.order_by('-rating').first()
	4. best_post_for_preview.preview()

11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье:

	1. comments = Comment.objects.filter(post=best_post_for_preview).values('date_in', 'user__username', 'rating', 'text')
	2. comments
